services:
  mongo:
    image: mongo:8.0.6
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - mongo-config-data:/data/configdb
      - mongo-db-data:/data/db
  mongo-express:
    image: mongo-express
    ports:
      - "9500:9500"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      PORT: 9500
  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    command: server --address ":9000" --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: graphoenix
      MINIO_ROOT_PASSWORD: graphoenix
      MINIO_SERVER_URL: "http://localhost:9000"
      MINIO_STORAGE_USE_HTTPS: "false"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
  create-bucket:
    image: minio/mc:RELEASE.2025-03-12T17-29-24Z
    entrypoint: sh -c "mc config host add minio http://minio:9000 graphoenix graphoenix && mc mb minio/graphoenix"
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: 'graphoenix'
      MINIO_SECRET_KEY: 'graphoenix'

volumes:
  mongo-config-data:
  mongo-db-data:
  minio-data:
