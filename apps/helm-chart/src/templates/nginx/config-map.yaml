{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap

metadata:
  name: {{ template "graphoenix.fullname" . }}-nginx
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "graphoenix.labels" (dict "context" . "component" .Values.server.name "name" "nginx") | nindent 4 }}

data:
  nginx-server-block.conf: |-
    upstream server {
      server {{ template "graphoenix.server.fullname" . }}:{{ template "graphoenix.server.port". }};
    }

    upstream console {
      server {{ template "graphoenix.console.fullname" . }}:{{ template "graphoenix.console.port". }};
    }

    server {
      listen {{ .Values.nginx.containerPorts.http }};
      server_name _;

      location /healthz {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
      }

      {{- if .Values.nginx.extraServerBlockConfiguration }}
      {{ .Values.nginx.extraServerBlockConfiguration | nindent 6 }}
      {{- end }}

      location ^~ /nx-cloud/private {
        return 404;
      }

      location ^~ /nx-cloud {
        proxy_pass http://server;
      }

      location / {
        proxy_pass http://console;
        proxy_set_header  Host              $http_host;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
      }
    }
{{- end }}
